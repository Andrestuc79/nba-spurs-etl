{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2025-08-10T14:20:55.867785Z", "invocation_id": "2ab8d449-aeb3-403b-8c41-d0115927ef22", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-10T14:20:54.755922Z", "completed_at": "2025-08-10T14:20:54.791097Z"}, {"name": "execute", "started_at": "2025-08-10T14:20:54.793503Z", "completed_at": "2025-08-10T14:20:55.174443Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.42667055130004883, "adapter_response": {"_message": "SELECT 20", "code": "SELECT", "rows_affected": 20}, "message": "SELECT 20", "failures": null, "unique_id": "model.spurs_dbt.home_vs_away", "compiled": true, "compiled_code": "\n\nwith base as (\n  select\n    season,\n    case\n      when matchup like '%@%' then 'Away'\n      else 'Home'\n    end as location,\n    wl,\n    pts::int as pts\n  from \"nba\".\"raw\".\"spurs_games\"\n)\n\nselect\n  season,\n  location,\n  count(*) as games,\n  sum(case when wl = 'W' then 1 else 0 end) as wins,\n  sum(case when wl = 'L' then 1 else 0 end) as losses,\n  round(avg(pts), 2) as avg_points\nfrom base\ngroup by season, location\norder by season, location", "relation_name": "\"nba\".\"raw\".\"home_vs_away\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-10T14:20:55.286415Z", "completed_at": "2025-08-10T14:20:55.310849Z"}, {"name": "execute", "started_at": "2025-08-10T14:20:55.314773Z", "completed_at": "2025-08-10T14:20:55.487422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.21041178703308105, "adapter_response": {"_message": "SELECT 10", "code": "SELECT", "rows_affected": 10}, "message": "SELECT 10", "failures": null, "unique_id": "model.spurs_dbt.summary_by_season", "compiled": true, "compiled_code": "\n\nwith base as (\n  select\n    season,\n    wl,\n    pts::int as pts\n  from \"nba\".\"raw\".\"spurs_games\"\n)\n\nselect\n  season,\n  count(*) as total_games,\n  sum(case when wl = 'W' then 1 else 0 end) as wins,\n  sum(case when wl = 'L' then 1 else 0 end) as losses,\n  round(avg(pts), 2) as avg_points\nfrom base\ngroup by season\norder by season", "relation_name": "\"nba\".\"raw\".\"summary_by_season\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-10T14:20:55.512056Z", "completed_at": "2025-08-10T14:20:55.570121Z"}, {"name": "execute", "started_at": "2025-08-10T14:20:55.574353Z", "completed_at": "2025-08-10T14:20:55.817502Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.31251978874206543, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.spurs_dbt.team_weaknesses", "compiled": true, "compiled_code": "\n\nwith base as (\n  select\n    season,\n    fg_pct::float as fg_pct,\n    tov::int as turnovers\n  from \"nba\".\"raw\".\"spurs_games\"\n)\n\nselect\n  season,\n   round(avg(fg_pct)::numeric, 3) as avg_fg_pct,\n  round(avg(turnovers), 2) as avg_turnovers\nfrom base\ngroup by season\nhaving round(avg(fg_pct)::numeric, 3) < 0.45 or round(avg(turnovers), 2) > 14\norder by season", "relation_name": "\"nba\".\"raw\".\"team_weaknesses\""}], "elapsed_time": 1.3470399379730225, "args": {"quiet": false, "send_anonymous_usage_stats": true, "partial_parse_file_diff": true, "cache_selected_only": false, "print": true, "introspect": true, "static_parser": true, "printer_width": 80, "log_path": "/usr/local/airflow/dbt/logs", "use_colors_file": true, "which": "run", "log_format": "default", "populate_cache": true, "use_colors": true, "write_json": true, "log_format_file": "debug", "defer": false, "log_level": "info", "select": [], "show_resource_report": false, "favor_state": false, "project_dir": "/usr/local/airflow/dbt", "exclude": [], "log_file_max_bytes": 10485760, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "macro_debugging": false, "invocation_command": "dbt run", "strict_mode": false, "profiles_dir": "/usr/local/airflow/dbt", "vars": {}, "version_check": true, "partial_parse": true, "enable_legacy_logger": false, "log_level_file": "debug"}}